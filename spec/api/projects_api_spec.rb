=begin
#User API

#The User API represents all functionality that a user in Design Huddle may perform. Every API method is run in the context of a single user and requires a user-specific Access Token for authorization. The most common integration use cases consist of listing templates, creating design projects from those templates and exporting the finished designs. Read more about authentication <a target=\"_parent\" href=\"https://api.designhuddle.com#authentication\">here</a> and embedding the Design Huddle editor <a target=\"_parent\" href=\"https://api.designhuddle.com#embedding\">here</a>.

The version of the OpenAPI document: 2023-02-02T22:11:12Z
Contact: support@designhuddle.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for DesignHuddleUser::ProjectsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectsApi' do
  before do
    # run before each test
    @api_instance = DesignHuddleUser::ProjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectsApi' do
    it 'should create an instance of ProjectsApi' do
      expect(@api_instance).to be_instance_of(DesignHuddleUser::ProjectsApi)
    end
  end

  # unit tests for projects_get
  # List projects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :brand_id Specify the Brand ID to filter the result by.
  # @option opts [String] :brand_code Specify the Brand Code to filter the result by.
  # @option opts [String] :media_type Specify the media type to filter the result by.
  # @option opts [Array<String>] :media_types Specify the media types to filter the result by.
  # @option opts [String] :project_status Specify the project status to filter the result by.
  # @option opts [Array<String>] :project_statuses Specify the project statuses to filter the result by.
  # @option opts [String] :project_ownership Specify the project ownership to filter the result by.
  # @option opts [Integer] :source_template_id Specify the Source Template ID to filter the result by.
  # @option opts [Array<Integer>] :source_template_ids Specify the Source Template IDs to filter the result by.
  # @option opts [String] :source_template_code Specify the Source Template Code to filter the result by.
  # @option opts [Array<String>] :source_template_codes Specify the Source Template Codes to filter the result by.
  # @option opts [Integer] :width Specify the width to filter the result by.
  # @option opts [Integer] :height Specify the height to filter the result by.
  # @option opts [String] :unit_type Specify the unit type to filter the result by.
  # @option opts [String] :search A search term used to narrow the focus of the result.
  # @option opts [String] :sort Specify which attribute to order the result by.
  # @option opts [String] :order Specify whether the result should be retrieved in ascending or descending order.
  # @option opts [Integer] :limit Specify the number of items per page to return.
  # @option opts [Integer] :page Specify which page of the result to return.
  # @option opts [Array<String>] :fields Specify the fields to the retrieve.
  # @return [ProjectsGETSuccess]
  describe 'projects_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_post
  # Create a project
  # @param projects_post_request 
  # @param [Hash] opts the optional parameters
  # @return [ProjectsPOSTSuccess]
  describe 'projects_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_project_id_delete
  # Archive a project
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [BaseSuccess]
  describe 'projects_project_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_project_id_get
  # Retrieve a project
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :generate_latest_thumbnail If a thumbnail has not already been generated incorporating the latest design changes, this will synchronously create a new thumbnail prior to returning the requested project data, including the new thumbnail_url.
  # @return [ProjectsProjectIDGETSuccess]
  describe 'projects_project_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for projects_project_id_patch
  # Update a project
  # @param project_id 
  # @param projects_project_idpatch_request 
  # @param [Hash] opts the optional parameters
  # @return [BaseSuccess]
  describe 'projects_project_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
